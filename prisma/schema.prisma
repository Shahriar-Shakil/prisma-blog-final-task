generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                Int      @id @default(autoincrement())
  firstName         String   @db.VarChar(50)
  lastName          String   @db.VarChar(50)
  email             String   @unique @db.VarChar(50)
  password          String   @db.VarChar(50)
  createAt          DateTime @default(now()) @db.Timestamp(0)
  updateAt          DateTime @default(now()) @updatedAt @db.Timestamp(0)
  mobile            String
  otp               String   @default("0") @db.VarChar(10)
  profile_image_url String   @default("") @db.VarChar(255)
  blogs             blog[]
}

model blog {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(50)
  metaTitle String   @db.VarChar(50)
  slug      String   @unique @db.VarChar(50)
  summary   String   @db.VarChar(275)
  published Boolean  @default(false)
  content   String   @db.VarChar(2000)
  createAt  DateTime @default(now()) @db.Timestamp(0)
  updateAt  DateTime @default(now()) @updatedAt @db.Timestamp(0)
  authorId  Int
  author    users    @relation(fields: [authorId], references: [id], onDelete: Cascade)

  @@index([authorId], map: "blog_authorId_fkey")
}

model team {
  id                Int      @id @default(autoincrement())
  name              String   @db.VarChar(50)
  profile_image_url String   @db.VarChar(255)
  role              String   @db.VarChar(50)
  facebook_url      String   @db.VarChar(255)
  twitter_url       String   @db.VarChar(255)
  linkedIn_url      String   @db.VarChar(255)
  createAt          DateTime @default(now()) @db.Timestamp(0)
  updateAt          DateTime @default(now()) @updatedAt @db.Timestamp(0)
}
